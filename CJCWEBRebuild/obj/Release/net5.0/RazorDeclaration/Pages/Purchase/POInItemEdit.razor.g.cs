// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace GMINWEB_CJC.Pages.Purchase
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using GMINWEB_CJC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using GMINWEB_CJC.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Blazored.Modal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Blazored.Modal.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using DevExpress.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using DevExpress.Blazor.Reporting;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.Extensions.Configuration;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.Extensions.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using BlazorFileUploader;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using System.Resources.Extensions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\Pages\Purchase\POInItemEdit.razor"
using DataAccessLibrary.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\Pages\Purchase\POInItemEdit.razor"
using DataAccessLibrary.Data;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/POInItemEdit")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/POInItemEdit/{loginId}")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/POInItemEdit/{loginId}/{selectedPOInItemNo}")]
    public partial class POInItemEdit : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 191 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\Pages\Purchase\POInItemEdit.razor"
       
    [CascadingParameter] public IModalService Modal { get; set; }
    [Parameter] public string selectedPOInItemNo { get; set; }
    [Parameter] public string loginId { get; set; }

    public GMINWEB_CJC.Pages.Common.ConfirmBase DeleteConfirmation { get; set; }

    private List<POInItemModel> masterModels;
    private List<POInItemModel> detailModels;
    private List<UserModel> POInUserIdList;
    private List<GroupModel> GroupCdList;
    private List<ItemModel> ItemCdList;
    private List<CustomerModel> CustomerCdList;
    private List<CommonCodeModel> BadTypeList;


    RadzenDataGrid<POInItemModel> detailGrid;

    POInItemModel masterModel = new POInItemModel();
    POInItemModel detailModel = new POInItemModel();

    private POInItemModel pOInItemToInsert;

    DateTime POInDate;

    protected override async Task OnInitializedAsync()
    {
        if (selectedPOInItemNo is not null)
        {
            masterModels = await _db.GetMasterPOInItem(selectedPOInItemNo, loginId);
            masterModel = masterModels.FirstOrDefault();

            POInDate = Convert.ToDateTime(masterModel.POInDate);

            detailModels = await _db.GetDetailPOInItem(selectedPOInItemNo, masterModel.BizUnit);

        }
        else
        {
            POInDate = DateTime.Today;
            masterModel.POInDate = DateTime.Today.ToString("yyyy-MM-dd");

        }

        POInUserIdList = await _userManager.GetUserFromCodehelp(loginId);
        GroupCdList = await _groupManager.GetGroup(loginId);
        //ItemCdList = await _itemManager.GetAllItem(loginId);
        CustomerCdList = await _customerManager.GetAccountFromCodehelp(loginId);
        BadTypeList = await _codeManager.FindCommonCodeFromName("불량유형", loginId);

    }

    void Open(string title, Type type, Dictionary<string, object> parameters, DialogOptions options)
    {
        //console.Log("Dialog opened");
    }

    void Close(dynamic result)
    {
        //console.Log($"Dialog closed");
    }

    public async Task OpenPOrder()
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(DialogPOrderList.POInCustCd), masterModel.POInCustCd);
        parameters.Add("loginId", loginId);

        var groupEdit = Modal.Show<DialogPOrderList>("발주서 선택", parameters);
        var result = await groupEdit.Result;

        if (!result.Cancelled)
        {
            if (DialogPOrderList.selectedPOrder is not null)
            {
                var selectedPOrder = DialogPOrderList.selectedPOrder;
                pOInItemToInsert.POrderNo = selectedPOrder.POrderNo;
                pOInItemToInsert.POSeq = selectedPOrder.Seq;
                pOInItemToInsert.ItemCd = selectedPOrder.ItemCd;
                pOInItemToInsert.ItemNm = selectedPOrder.ItemNm;
                pOInItemToInsert.Price = selectedPOrder.Price;
                pOInItemToInsert.Unit = selectedPOrder.UnitCd;
                pOInItemToInsert.Weight = selectedPOrder.Weight;
                pOInItemToInsert.POrderQty = selectedPOrder.Qty;
            }

        }
    }

    void btnCancleClick()
    {
        navigationManager.NavigateTo("/POInItemManagement");
    }

    async Task InsertRow()
    {
        if (masterModel.POInItemNo.GetNullToEmpty() != string.Empty)
        {
            pOInItemToInsert = new POInItemModel();
            pOInItemToInsert.POInItemNo = masterModel.POInItemNo;

            await detailGrid.InsertRow(pOInItemToInsert);
        }

        else
        {
            await jsRuntime.InvokeVoidAsync("alert", "상세 정보는 저장 후 등록할 수 있습니다.");
        }
    }

    async Task EditRow(POInItemModel pOInItem)
    {
        pOInItemToInsert = pOInItem;

        await detailGrid.EditRow(pOInItem);
    }

    async Task SaveRow(POInItemModel pOInItem)
    {
        if (pOInItem == pOInItemToInsert)
        {
            pOInItemToInsert = null;
        }

        //필수값 체크
        var errMessage = ValidationCheckPOrderDetail(pOInItem);

        if (errMessage == string.Empty)
        {
            if (pOInItem.Seq == 0)
            {
                //코드가 채번되기 전이면 INSERT
                pOInItem.POInDate = masterModel.POInDate;
                var res = await _db.InsertDetailData(pOInItem, masterModel.POInItemNo, loginId);
                if (!res.IsError())
                {
                    await detailGrid.UpdateRow(pOInItem);
                    detailModels = await _db.GetDetailPOInItem(pOInItem.POInItemNo, masterModel.BizUnit);

                    //입고 총수량 및 총금액 재계산 후 재로드
                    CalculateQtyAmt(detailModels);
                    var result = await _db.UpdateMasterData(masterModel, loginId);
                    masterModels = await _db.GetMasterPOInItem(pOInItem.POInItemNo, loginId);
                    masterModel = masterModels.FirstOrDefault();

                }
                else
                {
                    await jsRuntime.InvokeVoidAsync("alert", res.GetErrorMessages());

                }
            }
            else
            {
                await jsRuntime.InvokeVoidAsync("alert", errMessage);
            }

        }
        else
        {
            await jsRuntime.InvokeVoidAsync("alert", "품목코드와 수량, 입고예정일자를 입력하여 주십시오.");
        }


    }

    void CancelEdit(POInItemModel pOInItem)
    {
        if (pOInItem == pOInItemToInsert)
        {
            pOInItemToInsert = null;
        }

        detailGrid.CancelEditRow(pOInItem);
    }

    async Task DeleteRow(POInItemModel pOInItem)
    {
        if (pOInItem == pOInItemToInsert)
        {
            pOInItemToInsert = null;
        }

        //저장 후 삭제일 때 DB 에서 DELETE
        if (detailModels.Contains(pOInItem))
        {
            pOInItemToInsert = pOInItem;
            DeleteConfirmation.Show("삭제하시겠습니까?");
        }
        //저장 전 삭제일 때 GRID UI에서만 삭제
        else
        {
            detailGrid.CancelEditRow(pOInItem);
            await detailGrid.Reload();
        }
    }

    async Task btnSaveClick()
    {
        //필수값 체크
        if (ValidationCheckPOrderMaster(masterModel) == true)
        {
            //신규일때
            if (masterModel.POInItemNo.GetNullToEmpty() == string.Empty)
            {
                var result = await _db.InsertMasterData(masterModel, loginId);
                if (result.IsError())
                {
                    await jsRuntime.InvokeVoidAsync("alert", result.GetErrorMessages());
                }
                else
                {
                    await jsRuntime.InvokeVoidAsync("alert", "처리되었습니다.");

                    masterModels = await _db.GetMasterPOInItem(result.FirstOrDefault().RTN_KEY, loginId);
                    masterModel = masterModels.FirstOrDefault();

                    detailModels = await _db.GetDetailPOInItem(masterModel.POInItemNo, masterModel.BizUnit);
                }
                //await ModalInstance.CloseAsync(ModalResult.Ok("Form was submitted successfully."));
            }

            //수정일때
            else
            {
                //총수량, 총금액 구하기
                CalculateQtyAmt(detailModels);

                var result = await _db.UpdateMasterData(masterModel, loginId);

                if (result.IsError())
                {
                    await jsRuntime.InvokeVoidAsync("alert", result.GetErrorMessages());

                }
                else
                {
                    navigationManager.NavigateTo("/POInItemManagement");

                }
            }
        }
        else
        {
            await jsRuntime.InvokeVoidAsync("alert", "발주담당자를 입력하여 주십시오.");
        }

    }

    protected async Task ConfirmDelete_Click(bool deleteConfirmed)
    {
        if (deleteConfirmed)
        {
            await _db.DeleteDetailData(pOInItemToInsert, loginId);

            detailModels = await _db.GetDetailPOInItem(masterModel.POrderNo, masterModel.BizUnit);
            await detailGrid.Reload();
        }
        else
        {
            pOInItemToInsert = null;
        }
    }

    string ValidationCheckPOrderDetail(POInItemModel pOInItem)
    {
        //필수값 미입력시 false 반환
        if (pOInItem.ItemCd.GetNullToEmpty() == string.Empty)
        {
            return "품목을 선택하여 주십시오.";
        }
        if (pOInItem.Qty.GetDecimalNullToZero() == 0 && pOInItem.BadQty.GetDecimalNullToZero() == 0)
        {
            return "양품수량 또는 불량수량을 입력하여 주십시오";
        }
        if (pOInItem.BadQty.GetDecimalNullToZero() > 0 && pOInItem.BadType.GetIntNullToZero() == 0)
        {
            return "불량유형을 선택하여 주십시오";
        }
        if (pOInItem.BadQty.GetDecimalNullToZero() == 0 && pOInItem.BadType.GetIntNullToZero() != 0)
        {
            return "불량수량을 입력하여 주십시오";
        }
        else
        {
            return string.Empty;
        }
    }

    bool ValidationCheckPOrderMaster(POInItemModel pOInItem)
    {
        //필수값 미입력시 false 반환
        if (pOInItem.POInCustCd.GetNullToEmpty() == string.Empty)
        {
            return false;
        }
        else
        {
            return true;
        }
    }

    async Task OnChangePOInUserId(object value, string name)
    {
        if (value is not null)
        {
            masterModel.POInUserId = (int)value;

            var userModels = await _userManager.GetUser(masterModel.POInUserId, loginId);
            masterModel.POInGroupCd = userModels.FirstOrDefault().GroupCd;
        }
    }

    void OnChangeItemCd(object value, string name)
    {
        if (value is not null)
        {
            detailModel.ItemCd = value.ToString();
        }
    }

    void OnChangeCustomerCd(object value, string name)
    {
        if (value is not null)
        {
            masterModel.POInCustCd = value.ToString();
        }
    }

    void POInDateChanged(object value)
    {
        if (value is not null)
        {
            masterModel.POInDate = (Convert.ToDateTime(value)).ToString("yyyy-MM-dd");
        }

    }

    void ChnageQty(object value)
    {
        if (value is not null)
        {
            var qty = Convert.ToDecimal(value);
            pOInItemToInsert.Amt = qty * pOInItemToInsert.Price;
        }
    }

    void CalculateQtyAmt(List<POInItemModel> pOInItem)
    {
        decimal totQty = 0;
        decimal totAmt = 0;

        if (pOInItem.Count > 0)
        {
            foreach (var item in pOInItem)
            {
                totQty += item.Qty;
                totAmt += item.Amt;
            }

            masterModel.TotQty = totQty;
            masterModel.TotAmt = totAmt;
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICommonCodeData _codeManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IUserData _userManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IGroupData _groupManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IItemData _itemManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICustomerData _customerManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IPOInItemData _db { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private DialogService DialogService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Microsoft.AspNetCore.Components.NavigationManager navigationManager { get; set; }
    }
}
#pragma warning restore 1591
