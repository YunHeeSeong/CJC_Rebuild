// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace GMINWEB_CJC.Pages.Common
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using GMINWEB_CJC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using GMINWEB_CJC.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Blazored.Modal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Blazored.Modal.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using DevExpress.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using DevExpress.Blazor.Reporting;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.Extensions.Configuration;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.Extensions.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using BlazorFileUploader;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\_Imports.razor"
using System.Resources.Extensions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\Pages\Common\UserEdit.razor"
using GMINWEB_CJC.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\Pages\Common\UserEdit.razor"
using System.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\Pages\Common\UserEdit.razor"
using DataAccessLibrary.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\Pages\Common\UserEdit.razor"
using DataAccessLibrary.Data;

#line default
#line hidden
#nullable disable
    public partial class UserEdit : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 162 "D:\작업장\Desktop\개발 솔루션\cjc관련 파일\CJC\GMINWEB_CJC\Pages\Common\UserEdit.razor"
       

    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [Parameter] public UserModel selectedUser { get; set; }
    [Parameter] public string loginId { get; set; }

    public GMINWEB_CJC.Pages.Common.ConfirmBase DeleteConfirmation { get; set; }

    private List<FileModel> fileModels;
    public FileModel selectedFile { get; set; }

    List<BizUnitModel> bizUnitList;
    List<GroupModel> groupList;
    List<RoleModel> roleList;
    RadzenDataGrid<FileModel> detailGrid;
    List<CommonCodeModel> DetailClsList;


    private FileModel fileModelToInsert;
    private FileModel fileModelToDelete;

    string imgSrc = "";
    IFileListEntry file = null;
    byte[] _fileBytes = null;


    private UserModel userModel = new UserModel();

    DateTime hiredate = DateTime.Today;


    protected override async Task OnInitializedAsync()
    {
        if (selectedUser is not null)
        {
            userModel.UserCd = selectedUser.UserCd;
            userModel.LoginId = selectedUser.LoginId;
            userModel.UserNm = selectedUser.UserNm;
            userModel.BizUnit = selectedUser.BizUnit;
            userModel.BizNm = selectedUser.BizNm;
            userModel.GroupCd = selectedUser.GroupCd;
            userModel.GroupNm = selectedUser.GroupNm;
            userModel.RoleId = selectedUser.RoleId;
            userModel.RoleNm = selectedUser.RoleNm;
            userModel.PhoneNo = selectedUser.PhoneNo;
            userModel.Email = selectedUser.Email;

            if (selectedUser.HireDate.GetNullToEmpty() == string.Empty)
            {
                hiredate = DateTime.Today;
                userModel.HireDate = hiredate.ToString("yyyy-MM-dd");
            }
            else
            {
                hiredate = Convert.ToDateTime(selectedUser.HireDate);
                userModel.HireDate = selectedUser.HireDate;
            }

            bizUnitList = await _bizUnitManger.GetAllBizUnit(loginId);
            roleList = await _roleManager.GetRoleMasterList(loginId);
            groupList = await _groupManager.GetGroup(loginId);
            fileModels = await _db.GetFile(userModel.UserCd, loginId);
            DetailClsList = await _codeManager.FindCommonCodeFromName("사용자관련파일", loginId);

        }
    }

    void OnChangeDetailCls(object value, string name)
    {
        if (value is not null && fileModelToInsert is not null)
        {
            fileModelToInsert.DetailCls = ((CommonCodeModel)value).CodeSeq;
            fileModelToInsert.DetailClsNm = ((CommonCodeModel)value).CodeSubNm;

        }
    }

    async Task InsertRow()
    {
        fileModelToInsert = new FileModel();
        fileModelToInsert.UserCd = userModel.UserCd;
        fileModelToInsert.FileCls = 3; //사용자 관련 파일

        await detailGrid.InsertRow(fileModelToInsert);
    }

    async Task EditRow(FileModel file)
    {
        fileModelToInsert = file;

        await detailGrid.EditRow(file);
    }

    async Task SaveRow(FileModel file)
    {
        if (file == fileModelToInsert)
        {
            fileModelToInsert = null;
        }

        if (ValidationCheckFile(file) == true)
        {
            if (file.FileNo == 0)
            {
                //파일넘버가 채번되기 전이면 INSERT 
                await _fileManager.InsertData(file, loginId);
            }
            else
            {
                //파일넘버가 기존에 존재하면 UPDATE
                await _fileManager.UpdateData(file, loginId);
            }
            await detailGrid.UpdateRow(file);
            fileModels = await _db.GetFile(userModel.UserCd, loginId);
        }
        else
        {
            await jsRuntime.InvokeVoidAsync("alert", "파일 종류와 파일을 선택하여 주십시오.");
        }
    }

    void CancelEdit(FileModel file)
    {
        if (file == fileModelToInsert)
        {
            fileModelToInsert = null;
        }

        detailGrid.CancelEditRow(file);
    }

    async Task DeleteRow(FileModel file)
    {
        if (file == fileModelToInsert)
        {
            fileModelToInsert = null;
        }

        //저장 후 삭제일 때 DB 에서 DELETE 
        if (fileModels.Contains(file))
        {
            selectedFile = file;
            DeleteConfirmation.Show("삭제하시겠습니까?");
        }
        //저장 전 삭제일 때 GRID UI에서만 삭제
        else
        {
            detailGrid.CancelEditRow(file);
            await detailGrid.Reload();
        }
    }

    public async Task HandleFileSelected(IFileListEntry[] files)
    {
        if (files.Count() > 0)
        {
            file = files.FirstOrDefault();
            using (var ms = new MemoryStream())
            {
                await file.Data.CopyToAsync(ms);
                _fileBytes = ms.ToArray();

                fileModelToInsert.FileNm = file.Name;
                fileModelToInsert.FileType = file.Type;
                fileModelToInsert.FileData = Convert.ToBase64String(_fileBytes);
            }
        }
    }

    void btnDownloadFile(FileModel file)
    {
        var fileArr = Convert.FromBase64String(file.FileData);
        jsRuntime.InvokeVoidAsync("DownloadAsFile", file.FileNm, file.FileType, fileArr);
    }


    void btnCancleClick()
    {
        ModalInstance.CancelAsync();
    }

    async Task btnSaveClick()
    {
        //필수값 체크
        if (ValidationCheckUser(userModel) == true)
        {
            await _db.UpdateUser(userModel,loginId);
            await ModalInstance.CloseAsync(ModalResult.Ok("Form was submitted successfully."));
        }
        else
        {
            await jsRuntime.InvokeVoidAsync("alert", "사용자명, 사업장 정보를 입력하여 주십시오.");
        }
    }

    bool ValidationCheckUser(UserModel user)
    {
        //필수값 미입력시 false 반환
        if (user.UserNm.GetNullToEmpty() == string.Empty) return false;
        //if (user.GroupCd.GetIntNullToZero ()== 0) return false;
        if (user.BizUnit.GetIntNullToZero() == 0) return false;

        else return true;
    }

    bool ValidationCheckFile(FileModel file)
    {
        //필수값 미입력시 false 반환
        if (file.FileNm is null || file.FileData is null || file.FileType is null)
        {
            return false;
        }
        else
        {
            return true;
        }
    }

    void OnChangeBizUnit(object value, string name)
    {
        if (value is not null)
        {
            userModel.BizUnit = value.ToString();
        }
    }

    void OnChangeGroup(object value, string name)
    {
        if (value is not null)
        {
            userModel.GroupCd = (int)value;
        }
    }

    void OnChangeRole(object value, string name)
    {
        if (value is not null)
        {
            userModel.RoleId = (int)value;
        }
    }

    void OnChangeHireDate(DateTime? value)
    {
        if (value is not null)
        {
            userModel.HireDate = ((DateTime)value).ToString("yyyy-MM-dd");
        }
    }

    protected async Task ConfirmDelete_Click(bool deleteConfirmed)
    {
        if (deleteConfirmed)
        {
            await _fileManager.DeleteData(selectedFile, loginId);
            fileModels = await _db.GetFile(userModel.UserCd, loginId);
            await detailGrid.Reload();
        }
        else
        {
            selectedFile = null;
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IUserData _db { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IFileData _fileManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IGroupData _groupManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IBizUnitData _bizUnitManger { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IRoleData _roleManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICommonCodeData _codeManager { get; set; }
    }
}
#pragma warning restore 1591
