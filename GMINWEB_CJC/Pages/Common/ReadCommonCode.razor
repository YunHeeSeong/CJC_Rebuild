@page "/ReadCommonCode"
@using System.Security.Claims
@using DataAccessLibrary.Data;
@using DataAccessLibrary.Model;

@inject IRoleData _roleManager
@inject ICommonCodeData _db
@inject AuthenticationStateProvider AuthenticationStateProvider


<div class="pagelocation" id="menugnb">
    <i class="fa fa-home"></i>
    <a href="/">HOME</a>
    > 기준정보관리 >
    <strong>공통코드조회</strong>
</div>

<br />

<AuthorizeView>
    <Authorized>
        @if (RoleYN == "Y")
        {
        <div>
            <div class="info_title">
                <h1 class="sub_title">공통코드 조회</h1>
            </div>

            <div style="margin-top:45px">
                <RadzenTabs RenderMode="TabRenderMode.Client">
                    <Tabs>
                        <RadzenTabsItem Text="공통코드 리스트">
                            <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true"
                                            FilterMode="FilterMode.Simple" PageSize="5" AllowPaging="true" AllowSorting="true" Data="@commonCodeList" TItem="CommonCodeModel" ColumnWidth="300px"
                                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" RowSelect="@RowSelect"
                                            LogicalFilterOperator="LogicalFilterOperator.Or" EmptyText="조회된 공통코드가 없습니다.">
                                <Columns>
                                    <RadzenDataGridColumn TItem="CommonCodeModel" Property="CodeId" CssClass="data_center" Title="코드" Width="70px" />
                                    <RadzenDataGridColumn TItem="CommonCodeModel" Property="CodeNm" Title="코드명" Width="200px" />
                                    <RadzenDataGridColumn TItem="CommonCodeModel" Property="Remk" Title="코드설명" Width="800px" />
                                </Columns>
                            </RadzenDataGrid>
                        </RadzenTabsItem>
                    </Tabs>
                </RadzenTabs>
            </div>

            <div style="margin-top:20px">
                <RadzenTabs RenderMode="TabRenderMode.Client">
                    <Tabs>
                        <RadzenTabsItem Text="공통코드 상세 리스트">
                            <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" Style="margin-top:20px"
                                            FilterMode="FilterMode.Simple" PageSize="5" AllowPaging="true" AllowSorting="true" Data="@selectedCommonCodes" TItem="CommonCodeModel" ColumnWidth="300px"
                                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                            LogicalFilterOperator="LogicalFilterOperator.Or" EmptyText="조회된 공통코드 상세 정보가 없습니다.">
                                <Columns>
                                    <RadzenDataGridColumn TItem="CommonCodeModel" Property="CodeId" Title="코드" Width="70px" CssClass="data_center" />
                                    <RadzenDataGridColumn TItem="CommonCodeModel" Property="CodeSeq" Title="순번" Width="70px" CssClass="data_center" />
                                    <RadzenDataGridColumn TItem="CommonCodeModel" Property="CodeSubNm" Title="코드명" Width="200px" />
                                    <RadzenDataGridColumn TItem="CommonCodeModel" Property="SubRemk" Title="코드상세설명"Width="800px"  />
                                </Columns>
                            </RadzenDataGrid>
                        </RadzenTabsItem>
                    </Tabs>
                </RadzenTabs>
            </div>

            <GMINWEB_Rebuild.Pages.Common.Confirm ConfirmationChanged="ConfirmDelete_Click" @ref="DeleteConfirmation" />

        </div>
        }
        else
        {
            <p>권한이 없는 사용자입니다.</p>
        }
    </Authorized>
    <NotAuthorized>
        <p>로그인 후 이용하실 수 있습니다.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter] public IModalService Modal { get; set; }
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }
    public CommonCodeModel deleteCommonCodeModel { get; set; }
    public GMINWEB_Rebuild.Pages.Common.ConfirmBase DeleteConfirmation { get; set; }

    public int MenuId = 12;

    ClaimsPrincipal CurrentUser;

    private List<CommonCodeModel> commonCodeList;
    private List<CommonCodeModel> selectedCommonCodes;
    private string RoleYN;

    protected override async Task OnInitializedAsync()
    {
        if (authenticationStateTask is not null)
        {
            CurrentUser = (await authenticationStateTask).User;

            if (CurrentUser.Identity.Name is not null)
            {
                var RoleList = await _roleManager.GetRoleYN(CurrentUser.Identity.Name, MenuId);
                RoleYN = RoleList.FirstOrDefault().ReadWrtYN;

                if (RoleYN == "Y")
                {
                    commonCodeList = await _db.GetAllCommonCodes(CurrentUser.Identity.Name);
                    //if (commonCodeList.Count() > 0)
                    //{
                    //    selectedCommonCodes = await _db.GetCommonCodeDetail(commonCodeList.FirstOrDefault().CodeId, CurrentUser.Identity.Name);
                    //}
                }
            }
        }
    }

    private async Task GetAllDatas()
    {
        commonCodeList = await _db.GetAllCommonCodes(CurrentUser.Identity.Name);
    }

    async Task btnNewClick()
    {
        var parameters = new ModalParameters();
        parameters.Add("loginId", CurrentUser.Identity.Name);

        var commonCodeEdit = Modal.Show<CommonCodeEdit>("공통코드 등록", parameters);
        var result = await commonCodeEdit.Result;

        if (!result.Cancelled)
        {
            await GetAllDatas();
        }
    }

    async Task btnUpdateClick(CommonCodeModel code)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(CommonCodeEdit.selectedCommonCode), code);
        parameters.Add("loginId", CurrentUser.Identity.Name);

        var commonCodeEdit = Modal.Show<CommonCodeEdit>("공통코드 등록 및 수정", parameters);
        var result = await commonCodeEdit.Result;

        if (!result.Cancelled)
        {
            //show
            await GetAllDatas();
        }
    }


    void btnDeleteClick(CommonCodeModel code)
    {
        DeleteConfirmation.Show("정말 삭제하시겠습니까 ?");

        deleteCommonCodeModel = code;
    }

    protected async Task ConfirmDelete_Click(bool deleteConfirmed)
    {
        if (deleteConfirmed)
        {
            await _db.DeleteMasterData(deleteCommonCodeModel, CurrentUser.Identity.Name);
            await GetAllDatas();
        }
        else
        {
            deleteCommonCodeModel = null;
        }
    }

    public async Task RowSelect(CommonCodeModel code)
    {
        selectedCommonCodes = await _db.GetCommonCodeDetail(code.CodeId, CurrentUser.Identity.Name);
    }

}