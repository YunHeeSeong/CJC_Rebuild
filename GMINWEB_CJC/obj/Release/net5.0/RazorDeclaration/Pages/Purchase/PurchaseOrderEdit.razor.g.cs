// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace GMINWEB_Rebuild.Pages.Purchase
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using GMINWEB_Rebuild;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using GMINWEB_Rebuild.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using Blazored.Modal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using Blazored.Modal.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using DevExpress.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using DevExpress.Blazor.Reporting;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.Extensions.Configuration;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using Microsoft.Extensions.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using BlazorFileUploader;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\_Imports.razor"
using System.Resources.Extensions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\Pages\Purchase\PurchaseOrderEdit.razor"
using GMINWEB_Rebuild.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\Pages\Purchase\PurchaseOrderEdit.razor"
using DataAccessLibrary.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\Pages\Purchase\PurchaseOrderEdit.razor"
using DataAccessLibrary.Data;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/porderEdit")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/porderEdit/{loginId}")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/porderEdit/{loginId}/{selectedPOrderNo}")]
    public partial class PurchaseOrderEdit : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 196 "C:\Rebuild_CJC\CJC\GMINWEB_CJC\Pages\Purchase\PurchaseOrderEdit.razor"
       

    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [Parameter] public string selectedPOrderNo { get; set; }
    [Parameter] public string loginId { get; set; }

    public GMINWEB_Rebuild.Pages.Common.ConfirmBase DeleteConfirmation { get; set; }

    private List<POrderModel> masterModels;
    private List<POrderModel> detailModels;
    private List<UserModel> POrderUserIdList;
    private List<GroupModel> GroupCdList;
    private List<ItemModel> ItemCdList;
    private List<CustomerModel> CustomerCdList;

    RadzenDataGrid<POrderModel> detailGrid;

    POrderModel masterModel = new POrderModel();
    POrderModel detailModel = new POrderModel();

    private POrderModel pOrderToInsert;
    private DateTime POrderDt;
    private bool isVat = false;

    protected override async Task OnInitializedAsync()
    {
        if (selectedPOrderNo is not null)
        {
            masterModels = await _db.GetMasterPOrder(selectedPOrderNo, loginId);
            masterModel = masterModels.FirstOrDefault();

            if (masterModel.VatYN == "Y")
            {
                isVat = true;
            }
            else
            {
                isVat = false;
            }

            POrderDt = Convert.ToDateTime(masterModel.POrderDt);

            detailModels = await _db.GetDetailPOrder(selectedPOrderNo, loginId);

            if (detailModels.Count > 0)
            {
                detailModel = detailModels.FirstOrDefault();
            }
        }
        else
        {
            masterModel.VatYN = "N";
            detailModel.ReqDelvDate = DateTime.Today;
            POrderDt = DateTime.Today;
            masterModel.POrderDt = POrderDt.ToString("yyyy-MM-dd");
        }

        POrderUserIdList = await _userManager.GetUserFromCodehelp(loginId);
        GroupCdList = await _groupManager.GetGroup(loginId);
        ItemCdList = await _itemManager.GetAllItemCodeHelp(loginId);

        //거래처여부가 Y인 거래처만 조회
        CustomerCdList = await _customerManager.GetAccountFromCodehelp(loginId);


    }

    void btnCancleClick()
    {
        navigationManager.NavigateTo("/pOrderManagement");
    }

    async Task InsertRow()
    {
        //마스터 저장 후 
        if (masterModel.POrderNo.GetNullToEmpty() != string.Empty)
        {
            pOrderToInsert = new POrderModel();
            pOrderToInsert.POrderNo = masterModel.POrderNo;
            pOrderToInsert.ReqDelvDate = DateTime.Today;

            await detailGrid.InsertRow(pOrderToInsert);
        }

        //마스터 저장 전이라면 마스터 먼저 저장
        else
        {
            var result = await _db.InsertMasterData(masterModel, loginId);
            if (result.IsError())
            {
                await jsRuntime.InvokeVoidAsync("alert", result.GetErrorMessages());
            }
            else
            {
                //await jsRuntime.InvokeVoidAsync("alert", "처리되었습니다.");

                masterModels = await _db.GetMasterPOrder(result.FirstOrDefault().RTN_KEY, loginId);
                masterModel = masterModels.FirstOrDefault();

                detailModels = await _db.GetDetailPOrder(masterModel.POrderNo, loginId);
            }
        }
    }

    async Task EditRow(POrderModel pOrder)
    {
        pOrderToInsert = pOrder;

        await detailGrid.EditRow(pOrder);
    }

    async Task SaveRow(POrderModel pOrder)
    {
        if (pOrder == pOrderToInsert)
        {
            pOrderToInsert = null;
        }

        if (ValidationCheckPOrderDetail(pOrder) == true)
        {
            if (pOrder.Seq == 0)
            {
                //순번이 채번되기 전이면 INSERT
                await _db.InsertDetailData(pOrder, masterModel.POrderNo, loginId);

            }
            else
            {
                //코드가 기존에 존재하면 UPDATE
                await _db.UpdateDetailData(pOrder, loginId);
            }
        }
        else
        {
            await jsRuntime.InvokeVoidAsync("alert", "품목코드와 수량, 입고예정일자를 입력하여 주십시오.");
        }

        await detailGrid.UpdateRow(pOrder);

        detailModels = await _db.GetDetailPOrder(pOrder.POrderNo, loginId);

        //발주서 금액과 부가세 재계산 후 재로드
        CalculateAmtVat(masterModel.VatYN, detailModels);
        var result = await _db.UpdateMasterData(masterModel, loginId);
        masterModels = await _db.GetMasterPOrder(pOrder.POrderNo, loginId);
        masterModel = masterModels.FirstOrDefault();
    }

    void CancelEdit(POrderModel pOrder)
    {
        if (pOrder == pOrderToInsert)
        {
            pOrderToInsert = null;
        }

        detailGrid.CancelEditRow(pOrder);
    }

    async Task DeleteRow(POrderModel pOrder)
    {
        if (pOrder == pOrderToInsert)
        {
            pOrderToInsert = null;
        }

        //저장 후 삭제일 때 DB 에서 DELETE
        if (detailModels.Contains(pOrder))
        {
            pOrderToInsert = pOrder;
            DeleteConfirmation.Show("삭제하시겠습니까?");
        }
        //저장 전 삭제일 때 GRID UI에서만 삭제
        else
        {
            detailGrid.CancelEditRow(pOrder);
            await detailGrid.Reload();
        }
    }

    async Task btnSaveClick()
    {
        //필수값 체크
        if (ValidationCheckPOrderMaster(masterModel) == true)
        {

            var result = await _db.UpdateMasterData(masterModel, loginId);

            //입고가 진행되어 수정이 불가능할 경우 팝업
            if (result.IsError())
            {
                await jsRuntime.InvokeVoidAsync("alert", result.GetErrorMessages());

            }
            else
            {
                navigationManager.NavigateTo("/pOrderManagement");

            }
        }
        else
        {
            await jsRuntime.InvokeVoidAsync("alert", "발주담당자를 입력하여 주십시오.");
        }

    }

    protected async Task ConfirmDelete_Click(bool deleteConfirmed)
    {
        if (deleteConfirmed)
        {
            await _db.DeleteDetailData(pOrderToInsert, loginId);

            detailModels = await _db.GetDetailPOrder(masterModel.POrderNo, loginId);
            await detailGrid.Reload();
        }
        else
        {
            pOrderToInsert = null;
        }
    }

    bool ValidationCheckPOrderDetail(POrderModel pOrder)
    {
        //필수값 미입력시 false 반환
        if (pOrder.ItemCd.GetNullToEmpty() == string.Empty || pOrder.Qty.GetDecimalNullToZero() == 0)
        {
            return false;
        }
        else
        {
            return true;
        }
    }

    bool ValidationCheckPOrderMaster(POrderModel pOrder)
    {
        //필수값 미입력시 false 반환
        if (pOrder.POrderUserId.GetIntNullToZero() == 0)
        {
            return false;
        }
        else
        {
            return true;
        }
    }

    async Task OnChangePOrderUserId(object value, string name)
    {
        if (value is not null)
        {
            masterModel.POrderUserId = (int)value;

            var userModels = await _userManager.GetUser(masterModel.POrderUserId, loginId);
            masterModel.GroupCd = userModels.FirstOrDefault().GroupCd;
        }
    }

    void OnChangeItemCd(object value)
    {
        if (value is not null && pOrderToInsert is not null)
        {
            //pOrderToInsert.ItemCd = ((ItemModel)value).ItemCd;
            pOrderToInsert.ItemNm = ((ItemModel)value).ItemNm;
            pOrderToInsert.UnitCd = ((ItemModel)value).Unit;
        }
    }

    void ReqDelvDateChanged(object value)
    {
        if (value is not null)
        {
            pOrderToInsert.ReqDelvDate = Convert.ToDateTime(value);
        }
    }
    void OnCheck(bool? value, string name)
    {
        if (value == true)
        {
            isVat = true;
            masterModel.VatYN = "Y";
        }
        else
        {
            isVat = false;
            masterModel.VatYN = "N";
        }
    }
    void OnChangeCustomerCd(object value, string name)
    {
        if (value is not null)
        {
            masterModel.POrderCustCd = value.ToString();
        }
    }

    void OnChangeQty(object value)
    {
        if (value is not null)
        {
            var qty = Convert.ToDecimal(value);

            //부가세 여부가 Y 일 때 부가세 계산
            if (masterModel.VatYN == "Y")
            {
                pOrderToInsert.Amt = qty * pOrderToInsert.Price;
                pOrderToInsert.Amt = pOrderToInsert.Amt + pOrderToInsert.Amt * Convert.ToDecimal(0.1);
            }
            else
            {
                pOrderToInsert.Amt = qty * pOrderToInsert.Price;
            }
        }
    }

    void OnChangePrice(object value)
    {
        if (value is not null)
        {
            var price = Convert.ToDecimal(value);

            //부가세 여부가 Y 일 때 부가세 계산
            if (masterModel.VatYN == "Y")
            {
                pOrderToInsert.Amt = pOrderToInsert.Qty * price;
                pOrderToInsert.Amt = pOrderToInsert.Amt + pOrderToInsert.Amt * Convert.ToDecimal(0.1);
            }
            else
            {
                pOrderToInsert.Amt = pOrderToInsert.Qty * price;
            }
        }
    }

    void CalculateAmtVat(string VatYN , List<POrderModel> detailModels)
    {
        //총금액
        decimal totAmt = 0;


        if (detailModels.Count > 0)
        {
            foreach (var item in detailModels)
            {
                totAmt += item.Amt;
            }

            masterModel.Amt = totAmt;
        }
    }

    void POrderDtChanged(object value)
    {
        if (value is not null)
        {
            masterModel.POrderDt = Convert.ToDateTime(value).ToString("yyyy-MM-dd");
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IUserData _userManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IGroupData _groupManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IItemData _itemManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICustomerData _customerManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IPOrderData _db { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Microsoft.AspNetCore.Components.NavigationManager navigationManager { get; set; }
    }
}
#pragma warning restore 1591
