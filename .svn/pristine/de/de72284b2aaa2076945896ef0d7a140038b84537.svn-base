@page "/FileManagement"

@using DataAccessLibrary.Model
@using DataAccessLibrary.Data
@using System.Collections.Generic
@using System.Security.Claims

@inject IFileData _db
@inject ICommonCodeData _codeManager
@inject IRoleData _RoleManager
@inject IJSRuntime jsRuntime
@inject NotificationService NotificationService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager

    <style>
        .row {
            margin-bottom: 16px;
        }
    </style>

<div class="pagelocation" id="menugnb">
    <i class="fa fa-home"></i>
    <a href="/">HOME</a>
    <RadzenLabel Text=" > 기준정보관리 > " />
    <strong>파일관리</strong>
</div>

<br />

<AuthorizeView>
    <Authorized>
        @if (RoleYN == "Y")
        {
            <div>
                <div class="info_title">
                    <h1 class="sub_title">파일 관리</h1>
                    <div class="post_btn">
                        <RadzenButton Click="btnSearchClick" Style="background-color:black; color:white">조회</RadzenButton>
                    </div>
                </div>

                <RadzenCard Style=" padding-top: 10px; padding-bottom: 10px;">
                    <div class="col-sm-12">
                        <h5>검색조건</h5>
                        <div class="row">
                            <div class="col-sm-1 align-items-center d-flex">
                                <RadzenLabel Text="파일구분"></RadzenLabel>
                            </div>
                            <div class="col-sm-2">
                                <RadzenDropDown AllowClear="true" TValue="string" AllowVirtualization="true" Class="w-100"
                                                AllowFiltering="true" Data=@FileClsList TextProperty="CodeSubNm" ValueProperty="CodeSubNm" @bind-Value="selectedFileClsNm"
                                                SelectedItemChanged="@(args => OnChangeFileCls(args, "파일분류"))" />
                            </div>

                            <div class="col-sm-2"></div>

                                <div class="col-sm-1 align-items-center d-flex">
                                    <RadzenLabel Text="등록일자"></RadzenLabel>
                                </div>
                                <div class="col-sm-2">
                                    <RadzenDatePicker Name="ReqDelvDate" @bind-Value=StartDt DateFormat="yyyy-MM-dd" Change="@(arg=> StartDtChanged(arg))" Class="w-100" />
                                </div>
                                <strong>~</strong>
                                <div class="col-sm-2">
                                    <RadzenDatePicker Name="ReqDelvDate" @bind-Value=EndDt DateFormat="yyyy-MM-dd" Change="@(arg=> EndDtChanged(arg))" Class="w-100" />
                                </div>
                            </div>
                        </div>
                </RadzenCard>

                <div style="margin-top:20px">
                    <RadzenTabs   RenderMode="TabRenderMode.Client">
                        <Tabs>
                            <RadzenTabsItem Text="AS리스트">
                                <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true"
                                                FilterMode="FilterMode.Simple" PageSize="5" AllowPaging="true" AllowSorting="true" Data="@fileModels" TItem="FileModel" ColumnWidth="300px"
                                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                LogicalFilterOperator="LogicalFilterOperator.Or">
                                    <Columns>
                                        <RadzenDataGridColumn TItem="FileModel" Property="BizUnitNm" Title="사업장명" Width="100px" />
                                        <RadzenDataGridColumn TItem="FileModel" Property="FileNo" Title="파일번호" Width="70px" CssClass="data_center" />
                                        <RadzenDataGridColumn TItem="FileModel" Property="FileClsNm" Title="파일구분" Width="100px"CssClass="data_center"  />
                                        <RadzenDataGridColumn TItem="FileModel" Property="DetailClsNm" Title="파일종류" Width="140px" CssClass="data_center" />
                                        <RadzenDataGridColumn TItem="FileModel" Property="CustomerNm" Title="고객명" Width="100px" CssClass="data_center" />
                                        <RadzenDataGridColumn TItem="FileModel" Property="UserNm" Title="사용자명" Width="100px"CssClass="data_center"/>
                                        <RadzenDataGridColumn TItem="FileModel" Property="GroupNm" Title="조직명" Width="100px"CssClass="data_center" />
                                        <RadzenDataGridColumn TItem="FileModel" Property="ItemNm" Title="품목명" Width="120px" />
                                        <RadzenDataGridColumn TItem="FileModel" Property="FileNm" Title="파일명" Width="200px" />
                                        <RadzenDataGridColumn TItem="FileModel" Property="FileData" Title="파일데이터" Width="120px" Visible="false" />
                                        <RadzenDataGridColumn TItem="FileModel" Property="FileType" Title="파일유형" Width="120px" />
                                        <RadzenDataGridColumn TItem="FileModel" Property="Remk" Title="비고" Width="120px" />
                                        <RadzenDataGridColumn TItem="FileModel" Filterable="false" Title="다운로드" Width="200px" CssClass="data_center" >
                                            <Template Context="file">
                                                <RadzenButton  Style="margin: 0 0.5rem 0 0; color: darkslateblue; font-weight: bold; background-color: transparent; font-size: 20px; padding-left: 15px; padding-right: 15px;" Click="()=>btnDownloadFile(file)">다운로드</RadzenButton>
                                            </Template>
                                        </RadzenDataGridColumn>
                                    </Columns>
                                </RadzenDataGrid>
                            </RadzenTabsItem>
                        </Tabs>
                    </RadzenTabs>
                </div>
            </div>
        }
        else
        {
            <p>조회 권한이 없는 사용자입니다.</p>
        }
    </Authorized>
    <NotAuthorized>
        <p>로그인 후 이용하실 수 있습니다.</p>
    </NotAuthorized>
</AuthorizeView>


@code {
    [CascadingParameter] public IModalService Modal { get; set; }
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }
    public GMINWEB_CJC.Pages.Common.ConfirmBase DeleteConfirmation { get; set; }
    public int MenuId = 15;     //파일관리

    ClaimsPrincipal CurrentUser;
    private List<FileModel> fileModels;
    private List<CommonCodeModel> FileClsList;

    private string loginId;
    private string RoleYN;
    private string selectedFileClsNm;
    private int selectedFileCls;

    private DateTime StartDt;
    private DateTime EndDt;

    protected override async Task OnInitializedAsync()
    {
        if (authenticationStateTask is not null)
        {
            CurrentUser = (await authenticationStateTask).User;

            if (CurrentUser.Identity.Name is not null)
            {
                var RoleList = await _RoleManager.GetRoleYN(CurrentUser.Identity.Name, MenuId);
                RoleYN = RoleList.FirstOrDefault().ReadWrtYN;

                loginId = CurrentUser.Identity.Name;

                StartDt = DateTime.Today.AddDays(-7);
                EndDt = DateTime.Today;

                if (RoleYN == "Y")
                {
                    FileClsList = await _codeManager.FindCommonCodeFromName("파일분류", loginId);
                }
            }
        }
    }
    async Task btnSearchClick()
    {
        if (selectedFileCls.GetIntNullToZero() != 0)
        {
            fileModels = await _db.GetFile(loginId, StartDt, EndDt, selectedFileCls);
        }
        else
        {
            await jsRuntime.InvokeVoidAsync("alert", "조회할 파일구분을 선택하여 주십시오.");

        }
    }

    void btnDownloadFile(FileModel file)
    {
        var fileArr = Convert.FromBase64String(file.FileData);
        jsRuntime.InvokeVoidAsync("DownloadAsFile", file.FileNm, file.FileType, fileArr);
    }

    void StartDtChanged(object value)
    {
        if (value is not null)
        {
            StartDt = Convert.ToDateTime(value);
        }
    }
    void EndDtChanged(object value)
    {
        if (value is not null)
        {
            EndDt = Convert.ToDateTime(value);
        }
    }
    void OnChangeFileCls(object value, string name)
    {
        if (value is not null)
        {
            selectedFileCls = ((CommonCodeModel)value).CodeSeq;
            selectedFileClsNm = ((CommonCodeModel)value).CodeSubNm;
        }
    }

}
