@page "/code/warehouse"

@using DataAccessLibrary.Model
@using DataAccessLibrary.Data
@using System.Collections.Generic;

@inject IWarehouseData _db
@inject IJSRuntime jsRuntime

<h1>창고 관리</h1>
<div class="pagelocation" id="menugnb">
    <i class="fa fa-home"></i>
    <a href="/">HOME</a>
    > 기준정보관리 >
    <strong>창고관리</strong>
</div>

<h4>창고명 검색</h4>
<div class="search_area">
    <div class="fl wd85p">
        <input class="w3-input w3-border" id="txtWhNm" @bind-value="txtWhNm" type="text" />
    </div>
    <div class="fr text_right">
        <button type="submit" class="btn btn-primary" @onclick="btnSearchClick">검색</button>
    </div>
</div>

<br />
<br />

<div>
    <h4>창고 관리</h4>
    <button type="button" class="btn btn-success" @onclick="btnNewClick">신규</button>
</div>

<br />
<br />

@if (warehouses is null)
{
    <p><em>Loading ...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>창고코드</th>
                <th>창고명</th>
                <th>창고타입</th>
                <th>창고위치</th>
                <th>수정 및 삭제</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var warehouse in warehouses)
            {
                <tr>
                    <td>@warehouse.WhCd</td>
                    <td>@warehouse.WhNm</td>
                    <td>@warehouse.WhType</td>
                    <td>@warehouse.WhLoc</td>
                    <td>
                        <button id="btnUpdate" class="btn btn-primary" @onclick="()=>btnUpdateClick(warehouse.WhCd)">수정</button>
                        <button id="btnDelete" class="btn btn-danger" @onclick="()=>btnDeleteClick(warehouse.WhCd)">삭제</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <GMINWEB_CJC.Pages.Common.Confirm ConfirmationChanged="ConfirmDelete_Click"  @ref="DeleteConfirmation" />
}

@code {
    [CascadingParameter] public IModalService Modal { get; set; }

    List<Warehouse> model { get; set; }

    public string selectedWhCd { get; set; }
    public string txtWhNm { get; set; }
    public GMINWEB_CJC.Pages.Common.ConfirmBase DeleteConfirmation { get; set; }
    private List<WarehouseModel> warehouses;

    protected override async Task OnInitializedAsync()
    {
        warehouses = await _db.GetData();
    }

    private async Task GetAllDatas()
    {
        warehouses = await _db.GetData();
    }

    async Task btnSearchClick()
    {
        if(txtWhNm != null)
        {
            WarehouseModel warehouseModel = new WarehouseModel
            {
                WhNm = txtWhNm
            };

            warehouses = await _db.GetData(warehouseModel);
        }
    }

    async Task btnNewClick()
    {
        var warehouseEdit = Modal.Show<WarehouseEdit>("창고등록 및 수정");
        var result = await warehouseEdit.Result;

        if (!result.Cancelled)
        {
            await GetAllDatas();
        }
    }

    async Task btnUpdateClick(string whCd)
    {
        var selectedWarehouse = warehouses.FirstOrDefault(x => x.WhCd == whCd);

        var parameters = new ModalParameters();
        parameters.Add(nameof(WarehouseEdit.selectedModel), selectedWarehouse);

        var warehouseEdit = Modal.Show<WarehouseEdit>("창고등록 및 수정", parameters);
        var result = await warehouseEdit.Result;

        if (!result.Cancelled)
        {
            await GetAllDatas();
        }
    }

    void btnDeleteClick(string whCd)
    {
        DeleteConfirmation.Show("삭제하시겠습니까?");

        selectedWhCd = whCd;
    }

    protected async Task ConfirmDelete_Click(bool deleteConfirmed)
    {
        if(deleteConfirmed)
        {
            await _db.DeleteData(selectedWhCd);
            await GetAllDatas();
        }
        else
        {
            selectedWhCd = "";
        }
    }
}
