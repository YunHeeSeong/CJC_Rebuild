@page "/FactOutItemManagement"

@using DataAccessLibrary.Model
@using DataAccessLibrary.Data
@using System.Collections.Generic
@using System.Security.Claims

@inject IOutPDItemData _db
@inject IBizUnitData _bizUnitManager
@inject IRoleData _RoleManager
@inject IJSRuntime jsRuntime
@inject NotificationService NotificationService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager

<style>
    .row {
        margin-bottom: 16px;
    }
</style>


<div class="pagelocation" id="menugnb">
    <i class="fa fa-home"></i>
    <a href="/">HOME</a>
    <RadzenLabel Text=" > 구매/재고관리 > " />
    <strong>출하등록(공장)</strong>
</div>

<br />

<AuthorizeView>
    <Authorized>
        @if (RoleYN == "Y")
        {
        <div>
            <div class="info_title">
                <h1 class="sub_title">출하등록(공장)</h1>
                @*<div class="post_btn">
                <RadzenButton Click="btnSearchClick" Style="background-color:black; color:white">조회</RadzenButton>
            </div>*@
            </div>

            @*<RadzenCard>
            <div class="col-sm-12">
                <div class="row">
                    <h3>검색조건</h3>
                    <div class="col-sm-3 align-items-center d-flex">
                        <RadzenLabel Text="파일분류"></RadzenLabel>
                    </div>
                    <div class="col-sm-3">
                        <RadzenDropDown AllowClear="true" TValue="string" AllowVirtualization="true" Class="w-100" @bind-Value="selectedBizUnit"
                                        AllowFiltering="true" Data=@BizUnitList TextProperty="BizNm" ValueProperty="BizUnit"
                                        Change=@(args => OnChangeBizUnitList(args, "매장코드")) />
                    </div>
                </div>
            </div>
        </RadzenCard>*@

            <div style="margin-top:45px">
                <RadzenTabs RenderMode="TabRenderMode.Client">
                    <Tabs>
                        <RadzenTabsItem Text="주문서 리스트">
                            <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true"
                                            FilterMode="FilterMode.Simple" PageSize="5" AllowPaging="true" AllowSorting="true" Data="@outPDItemModels" TItem="OutPDItemModel" ColumnWidth="300px"
                                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" RowSelect="@RowSelect"
                                            LogicalFilterOperator="LogicalFilterOperator.Or" EmptyText="조회된 주문이 없습니다.">
                                <Columns>
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Property="FactBizUnitNm" Title="공장명" Width="150px" />
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Property="BizUnitNm" Title="매장명" Width="150px" />
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Property="OrderDt" Title="주문일자" Width="130px" CssClass="data_center" />
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Property="OrderNo" Title="주문번호" Width="130px" CssClass="data_center" />
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Property="ItemCd" Title="품목코드" Width="130px" CssClass="data_center" />
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Property="ItemNm" Title="품목명" Width="200px" />
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Property="StkQty" Title="재고수량" Width="80px" CssClass="data_right" FormatString="{0:n0}" />
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Property="OrderQty" Title="주문수량" Width="80px" CssClass="data_right" FormatString="{0:n0}" />
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Property="TotQty" Title="기출하수량" Width="80px" CssClass="data_right" FormatString="{0:n0}" />
                                    @*<RadzenDataGridColumn TItem="OutPDItemModel" Property="RQty" Title="출하잔여수량" Width="100px" />*@
                                    @*<RadzenDataGridColumn TItem="OutPDItemModel" Property="WorkStateNm" Title="작업상태" Width="100px" />*@
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Filterable="false" Title="출하등록" Width="180px" CssClass="data_center">
                                        <Template Context="outPDItem">
                                            <RadzenButton Style="margin: 0 0.5rem 0 0; color: darkblue; font-weight: bold; background-color: transparent; font-size: 20px; padding-left: 15px; padding-right: 15px;" ButtonStyle="ButtonStyle.Light" Click="()=>btnUpdateClick(outPDItem)">출하등록</RadzenButton>
                                        </Template>
                                    </RadzenDataGridColumn>
                                </Columns>
                            </RadzenDataGrid>


                        </RadzenTabsItem>
                    </Tabs>
                </RadzenTabs>

            </div>

            <div style="margin-top:45px">
                <RadzenTabs RenderMode="TabRenderMode.Client">
                    <Tabs>
                        <RadzenTabsItem Text="출하 내역 리스트">
                            <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" Style="margin-top:20px"
                                            FilterMode="FilterMode.Simple" PageSize="5" AllowPaging="true" AllowSorting="true" Data="@selectedOutPDItemModels" TItem="OutPDItemModel" ColumnWidth="300px"
                                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                            LogicalFilterOperator="LogicalFilterOperator.Or" EmptyText="조회된 출하내역이 없습니다.">
                                <Columns>
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Property="FactBizUnitNm" Title="공장명" Width="70px" Visible="false" />
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Property="BizUnitNm" Title="매장명" Width="70px" Visible="false" />
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Property="OutSeq" Title="출하순번" Width="70px"  CssClass="data_center"/>
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Property="OutDate" Title="출하일자" Width="150px" CssClass="data_center"/>
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Property="OutQty" Title="출하수량" Width="80px" CssClass="data_right" FormatString="{0:n0}"/>
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Property="Unit" Title="단위" Width="100px" />
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Property="Tax" Title="통관비" Width="100px" CssClass="data_right" FormatString="{0:n0}"/>
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Property="Remk" Title="비고" Width="400px" />
                                    <RadzenDataGridColumn TItem="OutPDItemModel" Filterable="false" Title="삭제" Width="150px" CssClass="data_center">
                                        <Template Context="outPDItem">
                                            <RadzenButton Style="margin: 0 0.5rem 0 0; color: darkred; font-weight: bold; background-color: transparent; font-size: 20px; padding-left: 15px; padding-right: 15px;" ButtonStyle="ButtonStyle.Warning" Click="()=>btnDeleteClick(outPDItem)">삭제</RadzenButton>
                                        </Template>
                                    </RadzenDataGridColumn>
                                </Columns>
                            </RadzenDataGrid>
                        </RadzenTabsItem>
                    </Tabs>
                </RadzenTabs>
            </div>
                <GMINWEB_CJC.Pages.Common.Confirm ConfirmationChanged="ConfirmDelete_Click" @ref="DeleteConfirmation" />

            </div>
            }
            else
            {
            <p>조회 권한이 없는 사용자입니다.</p>
            }
</Authorized>
    <NotAuthorized>
        <p>로그인 후 이용하실 수 있습니다.</p>
    </NotAuthorized>
</AuthorizeView>


@code {
    [CascadingParameter] public IModalService Modal { get; set; }
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }
    public OutPDItemModel selectedWorkOrder { get; set; }
    public GMINWEB_CJC.Pages.Common.ConfirmBase DeleteConfirmation { get; set; }
    public int MenuId = 27;

    ClaimsPrincipal CurrentUser;
    private List<BizUnitModel> BizUnitList;
    private List<OutPDItemModel> outPDItemModels;
    private List<OutPDItemModel> selectedOutPDItemModels;

    private OutPDItemModel outPDItemModel = new OutPDItemModel();
    private OutPDItemModel outPDItemModelToDelete;
    private string RoleYN;
    private string selectedBizUnit;
    private string selectedFactBizUnit;

    protected override async Task OnInitializedAsync()
    {
        //로그인을 한 사용자인지
        if (authenticationStateTask is not null)
        {
            CurrentUser = (await authenticationStateTask).User;

            //사용자 정보가 있는지
            if (CurrentUser.Identity.Name is not null)
            {
                var RoleList = await _RoleManager.GetRoleYN(CurrentUser.Identity.Name, MenuId);
                RoleYN = RoleList.FirstOrDefault().ReadWrtYN;

                //조회권한이 있는지
                if (RoleYN == "Y")
                {
                    //매장코드 가져오는 코드헬프
                    //BizUnitList = await _bizUnitManager.GetAllStoreBizUnit();

                    outPDItemModels = await _db.GetAllOrdersFromFact(CurrentUser.Identity.Name);
                }
            }
        }
    }

    #region // ** 이벤트 ** //
    //조회 버튼 이벤트
    //async Task btnSearchClick()
    //{
    //    if (selectedBizUnit.GetNullToEmpty() == string.Empty)
    //    {
    //        await jsRuntime.InvokeVoidAsync("alert", "조회할 매장을 선택하여주세요.");
    //    }
    //    else
    //    {
    //        outPDItemModel.BizUnit = selectedBizUnit;
    //        //outPDItemModel.FactBizUnit = FactBizUnit;

    //        outPDItemModels = await _db.GetAllOrdersFromFact(CurrentUser.Identity.Name, outPDItemModel);
    //    }
    //}

    //상단 그리드에서 주문 선택시 하단 출하내역 조회하는 이벤트
    public async Task RowSelect(OutPDItemModel outPDItem)
    {
        outPDItemModel = outPDItem;

        selectedBizUnit = outPDItemModel.BizUnit;
        selectedFactBizUnit = outPDItemModel.FactBizUnit;

        selectedOutPDItemModels = await _db.GetOutPDItemDetail(CurrentUser.Identity.Name, outPDItemModel);
    }


    //출하등록 버튼 이벤트
    async Task btnUpdateClick(OutPDItemModel outPDItem)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(FactOutItemEdit.selectedOutPDItem), outPDItem);
        parameters.Add("loginId", CurrentUser.Identity.Name);

        var outPDItemEdit = Modal.Show<FactOutItemEdit>("출하등록", parameters);
        var result = await outPDItemEdit.Result;

        if (!result.Cancelled)
        {
            await GetAllDatas();
        }

    }

    //출하내역 삭제 버튼 이벤트
    void btnDeleteClick(OutPDItemModel outPDItem)
    {
        DeleteConfirmation.Show("정말 출하 내역을 삭제하시겠습니까 ?");

        outPDItemModelToDelete = outPDItem;

        outPDItemModelToDelete.BizUnit = selectedBizUnit;
        outPDItemModelToDelete.FactBizUnit = selectedFactBizUnit;
    }

    //삭제 확인 팝업
    protected async Task ConfirmDelete_Click(bool deleteConfirmed)
    {
        if (deleteConfirmed)
        {
            await _db.DeleteData(outPDItemModelToDelete, CurrentUser.Identity.Name);
            await GetAllDatas();
        }
        else
        {
            outPDItemModelToDelete = null;
        }
    }

    //검색조건 이벤트
    void OnChangeBizUnitList(object value, string name)
    {
        if (value is not null)
        {
            selectedBizUnit = value.ToString();
        }
    }
    #endregion


    //재조회
    private async Task GetAllDatas()
    {
        outPDItemModels = await _db.GetAllOrdersFromFact(CurrentUser.Identity.Name);
        selectedOutPDItemModels = null;
    }
}
